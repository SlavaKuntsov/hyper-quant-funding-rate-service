// <auto-generated />
using System;
using FRC_Service.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FRC_Service.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250529030342_add_name")]
    partial class add_name
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FRC_Service.Domain.Models.Exchange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.HasKey("Id")
                        .HasName("pk_exchanges");

                    b.ToTable("exchanges", (string)null);
                });

            modelBuilder.Entity("FRC_Service.Domain.Models.FundingRateHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ExchangeId")
                        .HasColumnType("uuid")
                        .HasColumnName("exchange_id");

                    b.Property<long>("FetchedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("fetched_at");

                    b.Property<int>("IntervalHours")
                        .HasColumnType("integer")
                        .HasColumnName("interval_hours");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("OpenInterest")
                        .HasColumnType("numeric")
                        .HasColumnName("open_interest");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric")
                        .HasColumnName("rate");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("symbol");

                    b.Property<long>("TsRate")
                        .HasColumnType("bigint")
                        .HasColumnName("ts_rate");

                    b.HasKey("Id")
                        .HasName("pk_funding_rates_history");

                    b.HasIndex("ExchangeId")
                        .HasDatabaseName("ix_funding_rates_history_exchange_id");

                    b.HasIndex("Symbol", "ExchangeId", "TsRate")
                        .IsDescending(false, false, true)
                        .HasDatabaseName("ix_fr_history");

                    b.ToTable("funding_rates_history", (string)null);
                });

            modelBuilder.Entity("FRC_Service.Domain.Models.FundingRateOnline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ExchangeId")
                        .HasColumnType("uuid")
                        .HasColumnName("exchange_id");

                    b.Property<long>("FetchedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("fetched_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("OpenInterest")
                        .HasColumnType("numeric")
                        .HasColumnName("open_interest");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric")
                        .HasColumnName("rate");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("symbol");

                    b.Property<long>("TsRate")
                        .HasColumnType("bigint")
                        .HasColumnName("ts_rate");

                    b.HasKey("Id")
                        .HasName("pk_funding_rates_online");

                    b.HasIndex("ExchangeId")
                        .HasDatabaseName("ix_funding_rates_online_exchange_id");

                    b.HasIndex("Symbol")
                        .HasDatabaseName("ix_fr_online_symbol");

                    b.HasIndex("TsRate")
                        .IsDescending()
                        .HasDatabaseName("ix_fr_online_tsrate");

                    b.HasIndex("Name", "ExchangeId")
                        .IsUnique()
                        .HasDatabaseName("ix_fr_online_name_exchange_unique");

                    b.HasIndex("Symbol", "ExchangeId")
                        .IsUnique()
                        .HasDatabaseName("ix_fr_online_symbol_exchange_unique");

                    b.ToTable("funding_rates_online", (string)null);
                });

            modelBuilder.Entity("FRC_Service.Domain.Models.FundingRateHistory", b =>
                {
                    b.HasOne("FRC_Service.Domain.Models.Exchange", "Exchange")
                        .WithMany()
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_funding_rates_history_exchanges_exchange_id");

                    b.Navigation("Exchange");
                });

            modelBuilder.Entity("FRC_Service.Domain.Models.FundingRateOnline", b =>
                {
                    b.HasOne("FRC_Service.Domain.Models.Exchange", "Exchange")
                        .WithMany()
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_funding_rates_online_exchanges_exchange_id");

                    b.Navigation("Exchange");
                });
#pragma warning restore 612, 618
        }
    }
}
